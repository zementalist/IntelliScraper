"""First Migration

Revision ID: f32f137ec920
Revises: 
Create Date: 2023-06-06 11:39:55.877808

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = 'f32f137ec920'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('founded', sa.Integer(), nullable=True),
    sa.Column('page_last_edit_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('headquarter', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('operator_wiki_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('company_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('industry', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('sector', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('numbers', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('emails', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('official_website', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('facebook', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('twitter', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('instagram', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('linkedin', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('youtube', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tiktok', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('social_platform_name', sa.Enum('twitter', 'youtube', 'facebook', 'tiktok', 'instagram', 'telegram', name='socialplatform'), nullable=False),
    sa.Column('publish_date_limit', sa.Date(), nullable=True),
    sa.Column('frequency', sa.Enum('once', 'daily', 'weekly', 'monthly', name='frequencytype'), nullable=False),
    sa.Column('next_exec_time', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('output_format_type', sa.Enum('filesystem', 'database', name='dataformattype'), nullable=False),
    sa.Column('created_on', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.Column('items_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_id'), 'jobs', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_on', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('last_login_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('role', sa.Enum('user', 'admin', name='roletype'), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('companies_jobs',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('company_id', 'job_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('companies_jobs')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_jobs_id'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_table('companies')
    # ### end Alembic commands ###
